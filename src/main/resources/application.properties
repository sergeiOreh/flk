spring.main.banner-mode=off

#####################################################
# Имя сервиса, по которому будут отправляться запросы
# из других сервисов, и порт, на который будут приниматься запросы
######################################################
spring.application.name=flk-service

# настройка только для встроенного tomcat
# в случае использования другого сервера приложений, отключите данную настройку
server.port=7016

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# eureka.client.register-with-eureka - это свойство указывает на то, следует ли данному
# экземпляру созданного микросервиса, регистрироваться на сервере имен eureka, чтобы
# данный экземпляр был обнаружен другими мискросервисами
# В некоторых случаях вы не хотите, чтобы ваши экземпляры были обнаружены,
# тогда как вы просто хотите обнаружить другие экземпляры.
eureka.client.register-with-eureka=true

# указывает на то, должен ли клиент eureka, текущего микросервиса, получать
# информацию системного реестра eureka от сервера имент - eureka
eureka.client.fetch-registry=true

bt.rt.ot.service.name=registration-service-bt-rt-ot

bt.rt.ot.service.path=http://localhost:7021

dt.kdt.dts.service.name=registration-service-dt-kdt-dts

dt.kdt.dts.service.path=http://localhost:7038

rs.service.name=registration-service-rs

rs.service.path=http://localhost:7026

zvt.service.name=registration-service-zvt

zvt.service.path=http://localhost:7027

co.service.name=registration-service-co
co.service.path=http://localhost:7028


####################################################
#                    Oracle 11x
####################################################
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

spring.datasource.url=@dataSource.urlBase@
spring.datasource.username=@dataSource.username@
spring.datasource.password=@dataSource.password@

#Схема по умолчанию. В наименованиях аннотациях для sequence и процедурах для вызова из пакета
# указывается самостоятельно через точку наименование схемы TTS_FORMAT_LOGICAL_CONTROL.

#spring.jpa.properties.hibernate.default_schema="TTS_FORMAT_LOGICAL_CONTROL"

#Создание базы данных и таблиц, на основе указанных сущностей
spring.jpa.hibernate.ddl-auto=none

#показывает sql-запросы в отформатированном виде
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.format-sql=true

#������������ ��� ����������� SQL-�������� � ������ debug ������ hibernate.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#показывать на фронте, проброшенные ошибки
server.error.include-message = always

#Профиль логгирования для приложения, находящегося в стадии разработки
spring.profiles.active=dev

logging.config=classpath:logger/logback-spring.xml

logging.file.dir=logs/flk
logging.file.dir.backup=logs/backup/flk-backup
logging.file.name.var=flk.log
logging.file.archive.format.name=flk.%d{dd-MM-yyyy}.log

# переменные для файлов конфигурации логгера
logging.var.app=by.btslogistics.fklservice


api.prefix=/api/**
header.cors.origins.allow=@cors.url@
header.cors.methods.allow=GET, PUT, POST, DELETE, OPTIONS

#Отключение режима Open Session In View (OSIV), который включен по умолчанию
spring.jpa.open-in-view=false

